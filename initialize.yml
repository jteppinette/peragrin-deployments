---

- hosts: "{{ env }}:&swarm:&swarm-worker-one"
  vars:
    databases:
      - app
  tasks:
    - name: Register Postgres Container ID
      command: docker ps --filter name=postgres -q
      register: postgres_container_id
      changed_when: False

    - name: Postgres Container ID
      debug: msg={{ postgres_container_id.stdout }}

    - name: Check Postgres Databases
      shell: docker exec {{ postgres_container_id.stdout }} psql -U postgres -c "SELECT 1 FROM pg_database WHERE datname = '{{ item }}'" | grep -q 1
      with_items: "{{ databases }}"
      register: task
      failed_when: task.stderr != ""

    - name: Initialize Postgres Databases
      shell: docker exec {{ postgres_container_id.stdout }} psql -U postgres -c 'CREATE DATABASE {{ item.item }} OWNER db'
      when: item.rc == 1
      with_items: "{{ task.results }}"

- hosts: "{{ env }}:&swarm:&worker"
  vars:
    apps:
      - app
  tasks:

    - name: Create /etc/peragrin/fixture Directory
      file:
        path: /etc/peragrin/fixture
        state: directory
      run_once: True

    - name: Copy Logos Into Remote Fixture Directory
      copy:
        src: files/logos
        dest: /etc/peragrin/fixture
      run_once: True

    - name: Copy Icons Into Remote Fixture Directory
      copy:
        src: files/icons
        dest: /etc/peragrin/fixture
      run_once: True

    - name: Copy GeoJSON Into Remote Fixture Directory
      copy:
        src: files/geojson
        dest: /etc/peragrin/fixture
      run_once: True

    - name: Copy CSV Into Remote Fixture Directory
      copy:
        src: files/csv
        dest: /etc/peragrin/fixture
      run_once: True

    - name: Register API Container ID
      command: docker ps --filter name=api -q
      register: id
      changed_when: False
      run_once: True

    - name: API ID
      debug: msg={{ id.stdout }}
      run_once: True

    - name: Migrate API
      shell: docker exec {{ id.stdout }} api migrate
      run_once: True

    - name: Copy Fixture Logos
      shell: docker cp /etc/peragrin/fixture/logos {{ id.stdout }}:/etc/logos
      run_once: True

    - name: Copy Fixture Icons
      shell: docker cp /etc/peragrin/fixture/icons {{ id.stdout }}:/etc/icons
      run_once: True

    - name: Copy Fixture GeoJSON
      shell: docker cp /etc/peragrin/fixture/geojson {{ id.stdout }}:/etc/geojson
      run_once: True

    - name: Copy Fixture CSV
      shell: docker cp /etc/peragrin/fixture/csv {{ id.stdout }}:/etc/csv
      run_once: True

    - name: Load ABP
      shell: docker exec {{ id.stdout }} api loadabp --dir /etc
      run_once: True
